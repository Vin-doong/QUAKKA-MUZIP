<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Your Page</title>

  <!-- Link to Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">

  <!-- Link to FontAwesome Icons -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

  <link rel="stylesheet" href="/css/offcanvas.css">
</head>
<body>

  <!-- Offcanvas for the Playlist -->
  <div class="offcanvas offcanvas-end" tabindex="-1" id="playlistOffcanvas" aria-labelledby="playlistOffcanvasLabel">
    <div class="offcanvas-header">
      <h5 id="playlistOffcanvasLabel" class="text-uppercase fw-bold">My Playlists</h5>
      <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close">
        <i class="bi bi-x-circle"></i> <!-- Using a close icon from Bootstrap Icons -->
      </button>
    </div>
    <div class="offcanvas-body">
      <ul id="playlists" class="list-group"></ul>
    </div>
  </div>

  <!-- Button to open offcanvas -->
  <div class="d-flex justify-content-end">
    <button id="fetch-playlists-btn" class="btn btn-primary p-0" style="border: none; background: transparent;">
      <img src="image/fetchbtn.png" alt="Fetch Playlists" style="width: 50px; height: auto;">
    </button>
  </div>


  <script>
    // Initialize the offcanvas with the 'backdrop' option set to 'static'
    document.getElementById('fetch-playlists-btn')?.addEventListener('click', () => {
      const offcanvasElement = document.getElementById('playlistOffcanvas');
      
      // Initialize offcanvas with custom options
      const offcanvas = new bootstrap.Offcanvas(offcanvasElement, {
        backdrop: 'static',  // Prevent offcanvas from closing when clicking outside
        keyboard: false      // Disable closing the offcanvas with the keyboard
      });

      // Add the offcanvas-open class to the body to shift the background
      document.body.classList.add('offcanvas-open');
      
      offcanvas.show();  // Show the offcanvas
      fetchPlaylists();  // Fetch playlists after opening the offcanvas
    });

    // When the offcanvas is hidden, remove the shift on the main content (body)
    document.getElementById('playlistOffcanvas')?.addEventListener('hidden.bs.offcanvas', () => {
      document.body.classList.remove('offcanvas-open');
    });

    // Fetch playlists from Spotify API and update the UI
    async function fetchPlaylists() {
      const token = await fetch('/auth/playback-token')
        .then(res => res.json())
        .then(data => data.token);

      try {
        const response = await fetch('https://api.spotify.com/v1/me/playlists', {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        });

        if (!response.ok) {
          const errorData = await response.json();
          throw new Error(`Spotify API Error: ${errorData.error.message}`);
        }

        const data = await response.json();
        updatePlaylistUI(data.items);
      } catch (error) {
        console.error('Failed to fetch playlists:', error);
        alert('Failed to fetch playlists.');
      }
    }

    // Update the Playlist UI inside the Offcanvas
    function updatePlaylistUI(playlists) {
      const playlistsContainer = document.getElementById('playlists');
      playlistsContainer.innerHTML = '';  // Clear existing playlists

      playlists.forEach(playlist => {
        const listItem = document.createElement('li');
        listItem.className = 'list-group-item d-flex justify-content-between align-items-center';
        listItem.textContent = playlist.name;

        const playButton = document.createElement('button');
        playButton.textContent = 'Play';
        playButton.className = 'btn btn-primary btn-sm';
        playButton.addEventListener('click', () => playTrack(playlist.uri));

        listItem.appendChild(playButton);
        playlistsContainer.appendChild(listItem);
      });
    }

    // Play selected track (placeholder function)
    function playTrack(uri) {
      console.log('Playing track:', uri);
      // Add your logic to play the track here
    }
  </script>

</body>
</html>
